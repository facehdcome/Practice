int main()
{
	int arr[] = { 1,3,4,6,2,6,2,8,2,6 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	int j = 0;
	int temp = 0;//跳出最外层循环的变量，当temp = sz- 1 跳出所有循环（也就是全部遍历完成）
	int temp2 = 0;//内层调换数据的变量（数字前移）可变量
	int count = 0;//记录多少个重复值
	while (temp != (sz - 1))//判断temp是不是在最后一个值
	{
		count = 0;//count置零，为了查找重复值的数目，每次循环结束都得置零
		for (i = temp; i < sz; i++)
		{
			if (arr[temp] == arr[i])
			{
				count++;//判断一共几个重复值
			}
		}
		if (count <= 1)//如果count值小于1，说明只有一个值
		{
			temp++;//那么下标向后移动一位再次判断
		}
		else//如果大于一，将temp下标所在值赋给pos
		{
			temp2 = temp;//创建temp2防止temp被改变，如果被改变，最外层循环将提前结束，且从temp开始循环减少循环次数
		}

		while (count > 1)//统计重复数一共count个，但是留一个只需要循环count-1次，count>1 同理
		{
			if (arr[temp] == arr[temp2])//进入循环要判断当前temp的值是不是和temp2这个下标对应的值相同
			{
				for (i = temp2; i < sz; i++)
				{
					arr[i] = arr[i + 1];//向前移动
				}
				count--;//少一次循环（只有找到了才会减一，上面已经计算出循环了几次，所有不用担心无限循环）
				sz = sz - 1;//整体少一位
			}
			else//如果tarr[temp2] 不等于 arr[temp],让temp2++找到那个与她相等的值
				temp2++;
		}
	}

	//打印变换后的数组
	for (i = 0; i < sz; i++)
	{
		printf("%d ", arr[i]);
	}
	return 0;
}