//C 库函数
//char *strcat(char *dest, const char *src) 把 src 所指向的字符串追加到 dest 所指向的字符串的结尾。
//实现
char*  my_strcat(char* dest, const char* src)
{
    char* ret = dest;
    while (*dest != '\0')
    {
        dest++;
    }

    while (*src != '\0')
    {
        *dest = *src;
        dest++;
        src++;
    }
    return dest;
}

int main()
{
    char arr1[50] = "我有很多的空间";
    char arr2[] = ",那我来了";

    my_strcat(arr1, arr2);
    printf("%s", arr1);
    return 0;
}




//strcmp函数实现
int my_strcmp(const char* dest, const char* src)
{
    assert(dest != NULL);
    assert(src != NULL);

    while (*dest == *src)
    {
        如果达到\0说明两字符串相等
        if (*dest == '\0')
        {
            return 0;
        }
        dest++;
        src++;
    }
    if (*dest > *src)
        return 1;
    else
        return -1;
}

int main()
{
    char arr[] = "abcdefg";
    char arr2[] = "cdefghi";

   int ret =  my_strcmp(arr, arr2);
   if (ret > 0)
   {
       printf("%s 大于%s", arr, arr2);
   }
   else if (ret < 0)
   {
       printf("%s 小于  %s", arr, arr2);
   }
   else
   {
       printf("%s 等于 %s", arr, arr2);
   }

    return 0;
}




//strcpy升级版实现
char* my_strcpy(char* str, const char* str2)
{
    assert(str != NULL);
    assert(str2 != NULL);

    char* first = str;
    while (*str++ = *str2++)
    {
        ;
    }
    return first;
}

int main()
{
    char arr[] = "ABCDEFG";
    char arr2[] = "WORLD";

    my_strcpy(arr, arr2);
    printf("%s", arr);

    return 0;
}
